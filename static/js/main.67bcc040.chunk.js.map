{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","_","prevState","console","info","toUTCString","slice","clearInterval","name","props","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","clockNameId","addClock","removeClock","updateClock","document","addEventListener","e","preventDefault","debug","React","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBM,EAAUC,GAC3B,IAAQR,EAASG,KAAKJ,MAAdC,KAEJA,IAASQ,EAAUR,MACrBI,OAAOK,QAAQC,KAAKV,EAAKW,cAAcC,OAAO,IAAK,MAjBzD,kCAqBE,WACER,OAAOS,cAAcV,KAAKD,WAtB9B,oBAyBE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAc,EAASX,KAAKY,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGhB,EAAKW,cAAcC,OAAO,IAAK,YAtC1C,GAA2BK,a,MCL3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GAQX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVC,UAAW,WAHf,EAMEC,YAAc,EANhB,EAmCEC,SAAW,WACT,EAAKpB,SAAS,CAAEiB,UAAU,KApC9B,EAuCEI,YAAc,WACZ,EAAKrB,SAAS,CAAEiB,UAAU,KAxC9B,EA2CEK,YAAc,WACZ,EAAKtB,SAAS,CAAEkB,UAAWN,OA5C/B,uDAQE,WAAqB,IAAD,OAClBW,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAEC,iBACF,EAAKN,cAGPG,SAASC,iBAAiB,SAAS,WACjC,EAAKH,iBAGPxB,KAAKsB,YAAcrB,OAAOC,aAAY,WACpC,EAAKuB,gBACJ,QApBP,gCAuBE,SAAmBrB,EAAUC,GAC3B,MAAgCL,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAEdA,IAAchB,EAAUgB,WAAaD,GACvCnB,OAAOK,QAAQwB,MAAf,uBAAqCzB,EAAUgB,UAA/C,eAA+DA,MA3BrE,kCA+BE,WACEpB,OAAOS,cAAcV,KAAKsB,eAhC9B,oBA+CE,WACE,MAAgCtB,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOT,KAAMU,WAtDlC,GAAyBU,IAAMjB,WCb/BkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.67bcc040.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(_: never, prevState: State) {\n    const { date } = this.state;\n\n    if (date !== prevState.date) {\n      window.console.info(date.toUTCString().slice(-12, -4));\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.addClock();\n    });\n\n    document.addEventListener('click', () => {\n      this.removeClock();\n    });\n\n    this.clockNameId = window.setInterval(() => {\n      this.updateClock();\n    }, 3300);\n  }\n\n  componentDidUpdate(_: never, prevState: State) {\n    const { hasClock, clockName } = this.state;\n\n    if (clockName !== prevState.clockName && hasClock) {\n      window.console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.clockNameId);\n  }\n\n  addClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  removeClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  updateClock = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}